name: Deploy to VPS on Push

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check what changed
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**'
            client-deps:
              - 'client/package-lock.json'
              - 'client/package.json'
            server:
              - 'server/**'
            server-deps:
              - 'server/package-lock.json'
              - 'server/package.json'

      - name: Deploy via SSH
        if: steps.changes.outputs.client == 'true' || steps.changes.outputs.server == 'true'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            cd ${{ secrets.PROJECT_PATH }}
            echo "üì• Pulling latest code..."
            git pull origin master

            echo "üßπ Stopping containers and cleaning up..."
            docker-compose down
            docker image prune -f
            docker container prune -f
            docker volume prune -f

            echo "üîç Preparing build args based on changes..."

            SHOULD_BUILD_CLIENT=false
            SHOULD_BUILD_SERVER=false

            if [[ "${{ steps.changes.outputs.client }}" == "true" ]]; then
              SHOULD_BUILD_CLIENT=true
            fi
            if [[ "${{ steps.changes.outputs.server }}" == "true" ]]; then
              SHOULD_BUILD_SERVER=true
            fi

            echo "üß± Rebuilding only changed services..."

            if [[ "$SHOULD_BUILD_CLIENT" == "true" ]]; then
              echo "üì¶ Building frontend..."
              docker-compose build frontend
            fi

            if [[ "$SHOULD_BUILD_SERVER" == "true" ]]; then
              echo "‚öôÔ∏è Building backend..."
              docker-compose build backend
            fi

            echo "üöÄ Starting containers..."
            docker-compose up -d --remove-orphans

            echo "‚úÖ Deployment complete."
