name: Deploy to VPS on Push to production

on:
  push:
    branches: [production]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}

            echo "üí• Resetting any local changes before pulling..."
            git reset --hard
            git clean -fd

            echo "üì• Pulling latest code from production..."
            git pull origin production

            echo "üßπ Stopping containers and cleaning up..."
            docker-compose down
            docker image prune -f
            docker container prune -f
            docker volume prune -f

            echo "üîç Checking what changed..."
            SHOULD_BUILD_CLIENT=false
            SHOULD_BUILD_SERVER=false

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ frontend
            if git diff --name-only HEAD~1 HEAD | grep -qE '^client/|client/Dockerfile'; then
              SHOULD_BUILD_CLIENT=true
            fi

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ backend
            if git diff --name-only HEAD~1 HEAD | grep -qE '^server/|server/Dockerfile'; then
              SHOULD_BUILD_SERVER=true
            fi

            echo "üß± Building only changed services..."
            if [[ "$SHOULD_BUILD_CLIENT" == "true" ]]; then
              echo "üì¶ Building frontend..."
              docker-compose build frontend
            fi

            if [[ "$SHOULD_BUILD_SERVER" == "true" ]]; then
              echo "‚öôÔ∏è Building backend..."
              docker-compose build backend
            fi

            echo "üöÄ Starting containers..."
            docker-compose up -d --remove-orphans

            echo "‚úÖ Deployment complete."
